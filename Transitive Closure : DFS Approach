package trasitiveClosure2;

import java.util.*;

public class Graph {

	static class Vertex{
		int num;
		String color;
	}
	
	int noOfVertex;
	static Vertex vertex[];
	static LinkedList<Integer> adj[];
	static int[][] matrix;
	static Stack<Vertex> stack = new Stack<Vertex>();
	
	
	Graph(int noOfVertex){
		this.noOfVertex = noOfVertex;
		vertex = new Vertex[noOfVertex];
		adj = new LinkedList[noOfVertex];
		for(int i=0;i<noOfVertex;i++) {
			vertex[i] = new Vertex();
			adj[i] = new LinkedList<Integer>();
		}
	}
	
	
	public void addEdge(int x, int y) {
		adj[x].add(y);
	}
	
	
	public static void main(String args[]) {
		Graph g = new Graph(4);
		g.addEdge(0, 1); 
        g.addEdge(0, 2); 
        g.addEdge(1, 2); 
        g.addEdge(2, 0); 
        g.addEdge(2, 3); 
        g.addEdge(3, 3); 
        
        matrix = new int[g.noOfVertex][g.noOfVertex];
        
        for(int i=0;i<g.noOfVertex;i++) {
        	vertex[i].num = i;
        }
        
        
        for(int j=0;j<g.noOfVertex;j++) {
        	for(int i=0;i<g.noOfVertex;i++) {
            	vertex[i].color = "WHITE";
            }
        	
        	stack.push(vertex[j]);
        	dfs(j);
        	
        }
        
        
        for(int i=0;i<g.noOfVertex;i++) {
        	for(int j=0;j<g.noOfVertex;j++) {
        		System.out.print(matrix[i][j]+" ");
        	}
        	System.out.println();
        }
	}
	
	
	public static void dfs(int k) {
		Vertex ver = stack.pop();
		ver.color = "GRAY";
		matrix[k][ver.num] = 1;
		
		for(int i:adj[ver.num]) {
			if(vertex[i].color=="WHITE") {
				stack.push(vertex[i]);
				dfs(k);
			}
		}
	}
}
